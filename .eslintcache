[{"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\index.js":"1","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\App.js":"3","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\api\\index.js":"4","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\Stops.js":"5","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\Path.js":"6","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\BusLocation.js":"7","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\InfoBox.js":"8","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\StopBox.js":"9"},{"size":978,"mtime":1608737218418,"results":"10","hashOfConfig":"11"},{"size":5064,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":6487,"mtime":1609553365993,"results":"13","hashOfConfig":"11"},{"size":1254,"mtime":1609558553974,"results":"14","hashOfConfig":"11"},{"size":834,"mtime":1609448047502,"results":"15","hashOfConfig":"11"},{"size":844,"mtime":1609449987662,"results":"16","hashOfConfig":"11"},{"size":538,"mtime":1609539348651,"results":"17","hashOfConfig":"11"},{"size":1970,"mtime":1609543695349,"results":"18","hashOfConfig":"11"},{"size":1624,"mtime":1609544170786,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"t6tdyv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\index.js",[],["40","41"],"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\App.js",["42"],"import React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { NavigationControl, FullscreenControl, AttributionControl } from \"@urbica/react-map-gl\";\nimport \"./App.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport { fetchBusLocation, fetchStopTimes, fetchRouteInfo, fetchAllRoutes } from \"./api\";\nimport Stops from \"./components/Stops\";\nimport Path from \"./components/Path\";\nimport BusLocation from \"./components/BusLocation\";\nimport InfoBox from \"./components/InfoBox\";\nimport StopBox from \"./components/StopBox\";\n\nfunction App() {\n\tconst [loadingStopTimes, setLoadingStopTimes] = useState(true);\n\tconst [loadingRoutes, setLoadingRoutes] = useState(true);\n\tconst [theme, setTheme] = useState(\"light\");\n\tconst [menu, setMenu] = useState(false);\n\tconst [viewport, setviewport] = useState({\n\t\tlatitude: 43.6534817,\n\t\tlongitude: -79.3839347,\n\t\tbearing: -16,\n\t\tzoom: 10,\n\t});\n\tconst [busLocation, setBusLocation] = useState([]);\n\tconst [busPath, setBusPath] = useState([]);\n\tconst [pathData, setPathData] = useState([]);\n\tconst [routeInfo, setRouteInfo] = useState({});\n\tconst [allRoutes, setAllRoutes] = useState({});\n\tconst [search, setSearch] = useState(\"\");\n\tconst [busRoute, setBusRoute] = useState();\n\tconst [selectedStop, setSelectedStop] = useState(null);\n\tconst [stopTimes, setStopTimes] = useState({});\n\tconst [bounds, setBounds] = useState();\n\n\tconst mapstyles = {\n\t\tlight: \"mapbox://styles/seyon100/ckiz9arnc0sxe19o51hatbmuv?optimize=true\",\n\t\tdark: \"mapbox://styles/mapbox/dark-v9?optimize=true\",\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetAllRoutes(await fetchAllRoutes());\n\t\t\tsetLoadingRoutes(false);\n\t\t};\n\t\tsetAllRoutes({});\n\t\tsetLoadingRoutes(true);\n\t\tfetchAPI();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tbusRoute && setRouteInfo(await fetchRouteInfo(busRoute));\n\t\t};\n\t\tsetLoadingRoutes(true);\n\t\tfetchAPI();\n\t}, [busRoute]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetBusLocation(await fetchBusLocation(busRoute));\n\t\t};\n\t\tfetchAPI();\n\t\tconst interval = setInterval(() => fetchAPI(), 20000);\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [busRoute]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tselectedStop && setStopTimes(await fetchStopTimes(busRoute, selectedStop?.id));\n\t\t\tsetLoadingStopTimes(false);\n\t\t};\n\t\tsetStopTimes({});\n\t\tsetLoadingStopTimes(true);\n\t\tfetchAPI();\n\t\tconst interval = setInterval(() => fetchAPI(), 20000);\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [selectedStop, busRoute]);\n\n\tuseEffect(() => {\n\t\tconst listener = (e) => {\n\t\t\tif (e.key === \"Escape\") {\n\t\t\t\tsetSelectedStop(null);\n\t\t\t}\n\t\t};\n\t\twindow.addEventListener(\"keydown\", listener);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"keydown\", listener);\n\t\t};\n\t}, []);\n\n\tuseEffect(()=>{\n\t\tconst storetheme = localStorage.getItem(\"theme\");\n\t\tconst body = document.querySelector(\"body\");\n\n\t\tif (storetheme === \"dark\") {\n\t\t\tbody.classList.add(\"dark\");\n\t\t\tsetTheme(\"dark\")\n\t\t}else{\n\t\t\tsetTheme(\"light\")\n\t\t}\n\t},[]);\n\n\tuseEffect(() => {\n\t\tconst body = document.querySelector(\"body\");\n\n\t\tif (theme === \"dark\"){\n\t\t\tlocalStorage.setItem(\"theme\", \"dark\");\n\t\t\tbody.classList.add(\"dark\");\n\t\t}else if (body.classList.contains(\"dark\")) {\n\t\t\tlocalStorage.clear();\n\t\t\tbody.classList.remove(\"dark\");\n\t\t}\n\n\t}, [theme]);\n\n\tuseEffect(() => {\n\t\tif (Object.entries(routeInfo).length !== 0) {\n\t\t\tsetBounds([routeInfo.bounds?.sw.lon, routeInfo.bounds?.sw.lat, routeInfo.bounds?.ne.lon, routeInfo.bounds?.ne.lat]);\n\t\t}\n\t}, [routeInfo]);\n\n\tuseEffect(() => {\n\t\tif (bounds?.length > 0 && bounds[0] !== undefined && Object.entries(routeInfo).length !== 0) {\n\t\t\tchangeViewPort();\n\t\t}\n\t}, [bounds]);\n\n\t// help convert path to GEOJSON format\n\tuseEffect(() => {\n\t\tsetBusPath(routeInfo?.paths?.map(({ points }) => points?.map((p) => [Number(p.lon), Number(p.lat)])));\n\t}, [routeInfo]);\n\n\tuseEffect(() => {\n\t\tsetPathData(\n\t\t\tbusPath?.map((path) => ({\n\t\t\t\ttype: \"Feature\",\n\t\t\t\tgeometry: {\n\t\t\t\t\ttype: \"LineString\",\n\t\t\t\t\tcoordinates: path,\n\t\t\t\t},\n\t\t\t}))\n\t\t);\n\t}, [busPath]);\n\n\tconst changeViewPort = () => {\n\t\tconst newviewport = {\n\t\t\t...viewport,\n\t\t\tlatitude: Math.min(bounds[1], bounds[3]) + (Math.max(bounds[1], bounds[3]) - Math.min(bounds[1], bounds[3])) / 2,\n\t\t\tlongitude: Math.min(bounds[0], bounds[2]) + (Math.max(bounds[0], bounds[2]) - Math.min(bounds[0], bounds[2])) / 2,\n\t\t\tzoom: 12,\n\t\t};\n\t\tsetviewport(newviewport);\n\t};\n\n\tconst handleRouteChange = (event) => {\n\t\tsetBusRoute(event.target.getAttribute(\"tag\"));\n\t\tsetSearch(\"\");\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"themeToggle\">\n\t\t\t\t<button id=\"lightBtn\" className=\"themeBtn\" onClick={() => setTheme(\"light\")}>\n\t\t\t\t\tðŸŒž\n\t\t\t\t</button>\n\t\t\t\t<button id=\"darkBtn\" className=\"themeBtn\" onClick={() => setTheme(\"dark\")}>\n\t\t\t\t\tðŸŒ™\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t{selectedStop ? (\n\t\t\t\t\t<StopBox selectedStop={selectedStop} stopTimes={stopTimes} setSelectedStop={setSelectedStop} setStopTimes={setStopTimes} route={busRoute} loading={loadingStopTimes} setMenu={setMenu}/>\n\t\t\t\t) : !menu ? (\n\t\t\t\t\t<InfoBox routes={allRoutes} handleRouteChange={handleRouteChange} loading={loadingRoutes} search={search} setSearch={setSearch} setMenu={setMenu}/>\n\t\t\t\t): (<div className=\"menuBtn\" onClick={() => setMenu(false)}><i className=\"fas fa-bars\"></i></div>)\n\t\t\t}\n\n\t\t\t\t\n\t\t\t{busRoute && (\n\t\t\t\t<div className=\"routeDisplayContainer\">\n\t\t\t\t\t<div className=\"routeDisplay\">\n\t\t\t\t\t\t<div className=\"routeDisplayNum\">{busRoute}</div> <div className=\"routeDisplayTitle\"> {routeInfo?.title}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\n\t\t\t<div className=\"mapContainer\">\n\t\t\t\t<ReactMapGL\n\t\t\t\t\tclassName=\"map\"\n\t\t\t\t\t{...viewport}\n\t\t\t\t\tstyle={{ width: \"100%\", height: \"100%\" }}\n\t\t\t\t\taccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n\t\t\t\t\tmapStyle={mapstyles[theme]}\n\t\t\t\t\tviewportChangeMethod=\"flyTo\"\n\t\t\t\t\tviewportChangeOptions={{ duration: 1000 }}\n\t\t\t\t\tattributionControl={false}\n\t\t\t\t\tpitch={5}\n\t\t\t\t\tonViewportChange={setviewport}\n\t\t\t\t>\n\t\t\t\t\t<Path pathData={pathData}></Path>\n\t\t\t\t\t<Stops stops={routeInfo.stops} setSelectedStop={setSelectedStop}></Stops>\n\t\t\t\t\t<BusLocation busLocation={busLocation}></BusLocation>\n\n\t\t\t\t\t<AttributionControl compact={true} position=\"bottom-right\" customAttribution='<a href=\"https://github.com/seyon123\" target=\"_blank\" rel=\"noopener noreferrer\">Â© Seyon Rajagopal</a>' />\n\t\t\t\t\t<NavigationControl showCompass showZoom position=\"bottom-right\" />\n\t\t\t\t\t<FullscreenControl position=\"bottom-right\" />\n\t\t\t\t</ReactMapGL>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\api\\index.js",[],"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\Stops.js",[],"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\Path.js",[],"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\BusLocation.js",[],"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\InfoBox.js",[],"C:\\Users\\r_sey\\Documents\\GitHub\\ttc-arrivals\\src\\components\\StopBox.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":130,"column":5,"nodeType":"49","endLine":130,"endColumn":13,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeViewPort' and 'routeInfo'. Either include them or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [bounds, changeViewPort, routeInfo]",{"range":"56","text":"57"},[3651,3659],"[bounds, changeViewPort, routeInfo]"]